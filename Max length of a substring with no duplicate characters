#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int main() {
    //Length of longest substring
    string s;
    string s2;
    cin>>s;
    int j=1;
    for(int i=0;i<s.length();i++)
    {
        //As the first character is always occuring at 0 index and in map all the elements are by default at 0th index.
        s2[j]=s[i];
        j++;
    }
    int count=0;
    int length=0;
    map<char,int>mymap;
    vector<char>v;
    vector<char>v2;
    for(int i=1;i<=s.length();i++)
    {
        //Making sure that the element which has came earlier is not occured in our window then it's okay
        if(mymap[s2[i]]==0|| mymap[s2[i]]<i-count)
        {
            count++;
            v.push_back(s2[i]);
            mymap[s2[i]]=i;
        }
        else
        {
            if(count>length)
            {
                length=count;
                for(int l=0;l<v.size();l++)
                {
                    cout<<v[l];
                }
                v.clear();
                cout<<endl;
            }
            //As now the string starts with the current element which has occured again so count=1
            count=1;
        }
    }
    cout<<length<<endl;
}
